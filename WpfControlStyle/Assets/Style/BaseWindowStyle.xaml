<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
                <ResizeGrip Visibility="Collapsed" IsTabStop="false" HorizontalAlignment="Right" x:Name="WindowResizeGrip" VerticalAlignment="Bottom" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BaseWindowControlTemplate" TargetType="{x:Type Window}">
        <DockPanel LastChildFill="True">
            <!--外边框-->
            <Border  x:Name="borderTitle" Width="Auto" Height="Auto" DockPanel.Dock="Top" CornerRadius="4,4,0,0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF454556" Offset="0"/>
                        <GradientStop Color="#FF1D223C" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Grid>
                    <Image Height="16" Source="{TemplateBinding Icon}" Margin="10,5" HorizontalAlignment="Left"/>
                    <TextBlock Text="{TemplateBinding Title}" FontSize="15" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Foreground="White" Margin="40,10"/>
                    <!--最小化按钮-->
                    <!--<Button Content="Min" x:Name="btnMin" />-->
                    <!--最大化按钮-->
                    <!--<Button Content="Max" x:Name="btnMax" />-->
                    <!--关闭按钮-->
                    <Button x:Name="btnClose" Style="{StaticResource NewButtonStyle}" BorderBrush="Transparent" Width="20" Height="20" HorizontalAlignment="Right" Margin="0,0,20,0">
                        <Image Height="11" Source="/Assets/Images/window_close.png" />
                    </Button>
                </Grid>
            </Border>
            <!--模版绑定，调整窗口边框样式-->
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Width="Auto" Height="Auto" DockPanel.Dock="Top" CornerRadius="0,0,4,4">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <AdornerDecorator>
                        <ContentPresenter />
                    </AdornerDecorator>
                </ScrollViewer>
            </Border>
        </DockPanel>
    </ControlTemplate>

    <!--设置上面绑定的样式-->
    <Style x:Key="BaseWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="#FFE9E9E9" />
        <Setter Property="Template" Value="{StaticResource BaseWindowControlTemplate}"/>
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
        <Setter Property="FontFamily" Value="SimSun"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnMinStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid" Background="#FF2D2D30">
                        <Border x:Name="bd" Margin="3" BorderThickness="0 0 0 2" BorderBrush="#FFBEC8D3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="grid" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BtnMaxStyle" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="grid">
                        <Border x:Name="bd1" Margin="2" BorderThickness="2 5 2 2" BorderBrush="#FFBEC8D3"/>
                        <Border x:Name="bd2" Margin="2" BorderThickness="2 5 2 2" Background="#FF2D2D30" BorderBrush="#FFBEC8D3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Margin" TargetName="bd1" Value="5 3 3 5"/>
                            <Setter Property="BorderThickness" TargetName="bd1" Value="2"/>
                            <Setter Property="BorderThickness" TargetName="bd2" Value="2"/>
                            <Setter Property="Margin" TargetName="bd2" Value="3 5 5 3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="bd2" Value="Gray"/>
                            <Setter Property="Background" TargetName="grid" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BtnCloseStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid" Background="#FF2D2D30">
                        <Line x:Name="l1" X1="0" X2="11" Y1="0" Y2="11" Margin="3" Stroke="#FFBEC8D3" StrokeThickness="2.5"/>
                        <Line x:Name="l2" X1="0" X2="11" Y1="11" Y2="0" Margin="3" Stroke="#FFBEC8D3" StrokeThickness="2.5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="grid" Value="#FFF93F3F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="BaseStartWindowControlTemplate" TargetType="{x:Type Window}">
        <DockPanel LastChildFill="True">
            <!--外边框-->
            <Border  x:Name="borderTitle" Width="Auto" Height="Auto" DockPanel.Dock="Top" Background="#FF2D2D30" CornerRadius="4,4,0,0">
                <Grid>
                    <!--<Image Height="16" Source="{TemplateBinding Icon}" Margin="10,5" HorizontalAlignment="Left"/>-->
                    <TextBlock Text="{TemplateBinding Title}" FontSize="15" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Foreground="White" Margin="40,10"/>
                    <!--最小化按钮-->
                    <Button x:Name="btnMin" HorizontalAlignment="Right" Height="17" Width="17" Margin="0 10 60 0" Style="{StaticResource BtnMinStyle}"/>
                    <!--最大化按钮-->
                    <CheckBox x:Name="btnMax" HorizontalAlignment="Right" Height="17" Width="17" Margin="0 10 40 0" Style="{StaticResource BtnMaxStyle}"/>
                    <!--关闭按钮-->
                    <Button x:Name="btnClose" HorizontalAlignment="Right" Height="17" Width="17" Margin="0 10 18 0" Style="{StaticResource BtnCloseStyle}"/>
                </Grid>
            </Border>
            <!--模版绑定，调整窗口边框样式-->
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Width="Auto" Height="Auto" DockPanel.Dock="Top" CornerRadius="0,0,4,4">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <AdornerDecorator>
                        <ContentPresenter />
                    </AdornerDecorator>
                </ScrollViewer>
            </Border>
        </DockPanel>
    </ControlTemplate>

    <!--设置上面绑定的样式-->
    <Style x:Key="BaseStartWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="#FFE9E9E9" />
        <Setter Property="Template" Value="{StaticResource BaseStartWindowControlTemplate}"/>
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
        <Setter Property="FontFamily" Value="SimSun"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>